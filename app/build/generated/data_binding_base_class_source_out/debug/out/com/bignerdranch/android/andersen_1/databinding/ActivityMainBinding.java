// Generated by view binder compiler. Do not edit!
package com.bignerdranch.android.andersen_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bignerdranch.android.andersen_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Button buttonCount;

  @NonNull
  public final Button buttonToTwoActivity;

  @NonNull
  public final Button buttonToast;

  @NonNull
  public final TextView showCount;

  @NonNull
  public final TextView textRelativeLayout;

  private ActivityMainBinding(@NonNull View rootView, @NonNull Button buttonCount,
      @NonNull Button buttonToTwoActivity, @NonNull Button buttonToast, @NonNull TextView showCount,
      @NonNull TextView textRelativeLayout) {
    this.rootView = rootView;
    this.buttonCount = buttonCount;
    this.buttonToTwoActivity = buttonToTwoActivity;
    this.buttonToast = buttonToast;
    this.showCount = showCount;
    this.textRelativeLayout = textRelativeLayout;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_count;
      Button buttonCount = ViewBindings.findChildViewById(rootView, id);
      if (buttonCount == null) {
        break missingId;
      }

      id = R.id.button_to_two_activity;
      Button buttonToTwoActivity = ViewBindings.findChildViewById(rootView, id);
      if (buttonToTwoActivity == null) {
        break missingId;
      }

      id = R.id.button_toast;
      Button buttonToast = ViewBindings.findChildViewById(rootView, id);
      if (buttonToast == null) {
        break missingId;
      }

      id = R.id.show_count;
      TextView showCount = ViewBindings.findChildViewById(rootView, id);
      if (showCount == null) {
        break missingId;
      }

      id = R.id.textRelativeLayout;
      TextView textRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (textRelativeLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding(rootView, buttonCount, buttonToTwoActivity, buttonToast,
          showCount, textRelativeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
